syntax = 'proto3';

package serverMessaging;
option go_package="/serverMessaging";


service ServerService {
  rpc AppendEntry(AppendEntryMessage) returns (AppendEntryResponse);
  rpc RequestVote(RequestVoteMessage) returns (RequestVoteResponse);
  rpc ClientRequest(ClientRequestMessage) returns (ClientRequestResponse);
}

message AppendEntryMessage {
  int64 term = 1;
  string leaderAddress = 2;
  int64 prevLogIndex = 3;
  int64 prevLogTerm = 4;
  LogEntry entry = 5;
  int64 leaderCommit = 6;
}

message LogEntry {
  int64 term = 1;
  int64 index = 2;
  string Message = 3;
}

message AppendEntryResponse {
  int64 term = 1;
  bool success = 2;
  int64 matchIndex = 3;
}

message RequestVoteMessage {
  int64 term = 1;
  int64 lastLogIndex = 2;
  int64 lastLogTerm = 3;
}

message RequestVoteResponse {
  int64 term = 1;
  bool voteGranted = 2;
}

message ClientRequestMessage {
  string message = 1;
}

message ClientRequestResponse {
  bool success = 1;
}